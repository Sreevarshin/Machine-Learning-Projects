# -*- coding: utf-8 -*-
"""gold price prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jhvd9pU7OW0OPj83hQCMtn-w7VOQJStP
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

gold_data=pd.read_csv('/content/sample_data/gld_price_data.csv')

gold_data.head()

gold_data.tail()

gold_data.shape

gold_data.info()

gold_data.isnull().sum()

gold_data.describe()

correlation=gold_data.corr()

plt.figure(figsize=(8,8))
sns.heatmap(correlation,cbar=True, square=True,fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

print(correlation['GLD'])

sns.distplot(gold_data['GLD'],color='green')

x=gold_data.drop(['Date','GLD'],axis=1)
y=gold_data['GLD']

print(x)

print(y)

x_train, x_test, y_train ,y_test= train_test_split(x,y, test_size=0.2, random_state=2)

regressor=RandomForestRegressor(n_estimators=100)

regressor.fit(x_train,y_train)

test_data_prediction=regressor.predict(x_test)

print(test_data_prediction)

error_score= metrics.r2_score(y_test,test_data_prediction)
print("R squared error: ",error_score)

y_test=list(y_test)

plt.plot(y_test,color='blue',label='Actual Value')
plt.plot(test_data_prediction, color='green', label='Predicted Value')
plt.title('Actual Price vs Predicted Price')
plt.xlabel('Number of values')
plt.ylabel('GLD Price')
plt.legend()
plt.show()

